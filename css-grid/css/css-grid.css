/* 
--------------------------------------------------------
00 - COURSE BASE
--------------------------------------------------------
*/
html {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
        Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',
        sans-serif;
    color: var(--color-black);
    text-shadow: 0 2px 0 rgba(0, 0, 0, 0.07);
    font-weight: 900;
}

body {
    background-image: linear-gradient(110deg, #f93d66, #6d47d9);
    min-height: calc(100vh - 100px); /* 100vh minus the margin on body */
    margin: 50px;
    /* letter-spacing: -1px; */
    /* border: 5px solid red; */
}

h1,
h2,
h3,
h4,
h5,
h6 {
    margin: 0 0 0.5rem 0;
}
h1 {
    font-size: 4rem;
}
h2 {
    font-size: 3.6rem;
}

h3 {
    font-size: 2.4rem;
}

p {
    margin: 0 0 2rem 0;
}

body > div {
    margin-bottom: 4rem;
}
/* 
--------------------------------------------------------
00 - GRID BASE
--------------------------------------------------------
*/

.item {
    display: grid;
    justify-content: center;
    align-items: center;
    border: 5px solid rgba(0, 0, 0, 0.03);
    border-radius: 0.3rem;
    background-color: var(--color-yellow);
    font-size: 3.6rem;
}

.item p {
    margin: 0 0 0.5rem 0;
}

/* 
--------------------------------------------------------
01 - basic grid
--------------------------------------------------------
*/

.container {
    display: grid;
    gap: 2rem;
    /* Auto-fit on repeat creates a seamless wrapping of items with a minmax */
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));

    border: 5px dashed var(--color-black);
}

/* 
--------------------------------------------------------
02 - Image gallery
--------------------------------------------------------
*/

.container-gallery {
    display: grid;
    gap: 2rem;
    /* Auto-fit on repeat creates a seamless wrapping of items with a minmax */
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));

    border: 5px dashed var(--color-black);
}

.container-gallery > div {
    aspect-ratio: 3 / 2;
}

img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
}

/* 
--------------------------------------------------------
03 - Tracks
--------------------------------------------------------
*/
.container-tracks {
    border: 5px dashed var(--color-black);
}
.track {
    /* 
    - 1fr gives text an explicit column width, pushing everything else right
    - Everything after gets implicit widths (buttons)
    */
    display: grid;
    grid-template-columns: 1fr;
    grid-auto-flow: column;
    gap: 1rem;
    align-items: center;

    border-bottom: 1px solid rgba(0, 0, 0, 0.2);
    padding: 1rem;
    background: rgba(255, 255, 255, 0.2);
}

.track > h2 {
    font-weight: 500;
    font-size: 2rem;
    margin: 0;
}
.track > button {
    padding: 0 1rem;
    border-radius: 0.8rem;
    border-color: gray;
}
.track > button:not(:last-child) {
    background: rgb(253, 239, 162);
}

/* 
--------------------------------------------------------
04 - Flexbox Spacer
--------------------------------------------------------
*/

.container-controls {
    display: flex;
    align-items: center;
    gap: 1rem;

    border: 5px dashed var(--color-black);
}
.container-controls > button {
    padding: 0 1rem;
    border-radius: 0.8rem;
}
.scrubber {
    /* 
    - Flex:1; makes the scrubber take up whatever space is left after the buttons
    */
    flex: 1;
    background: #bada55;
    height: 1rem;
    min-width: 10rem;
    border-radius: 1rem;
}
/* Not recommended to do this in Grid 
.container-Gcontrols {
    display: grid;
    gap: 1rem;
    grid-template-columns: auto auto auto 1fr auto auto;
    align-items: center;
}
.Gscrubber {
    background: #bada55;
    height: 1rem;
    min-width: 10rem;
    border-radius: 1rem;
}
*/

/* 
--------------------------------------------------------
05 - Flexbox Variable wrap
--------------------------------------------------------
*/
.container-variable {
    margin-bottom: 1rem;
}

.container-variable,
.container-variable-2 {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    border: 5px dashed var(--color-black);
}

.container-variable-2 > * {
    flex: 1;
}
